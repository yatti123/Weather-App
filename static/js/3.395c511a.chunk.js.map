{"version":3,"sources":["assets/temp.svg","assets/humidity.svg","assets/wind.svg","assets/pressure.svg","assets/sunny.svg","assets/night.svg","assets/day.svg","assets/cloudy-night.svg","assets/cloudy.svg","assets/rain.svg","assets/rain-night.svg","assets/storm.svg","modules/WeatherInfoComponent.js"],"names":["WeatherIcons","sunny","night","day","cloudyNight","cloudy","perfectDay","rain","rainNight","storm","WeatherInfoIcons","sunrise","temp","sunset","humidity","wind","pressure","WeatherCondition","styled","div","Location","span","WeatherInfoLabel","WeatherInfoContainer","InfoContainer","InfoIcon","img","Infolabel","WeatherInfoComponent","props","name","value","src","WeatherComponent","weatherInfo","sys","country","windSpeed","speed","main","currTemp","weather","weatherType","icon","weatherTypeDesc","description","isDay","includes","id","Math","floor","alt","timeStamp","newDate","Date","hours","getHours","minutes","getMinutes","getTime"],"mappings":"sRAAe,MAA0B,iCCA1B,MAA0B,qCCA1B,MAA0B,iCCA1B,MAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,gCCA1B,MAA0B,yCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,uCCA1B,MAA0B,kCCiB5BA,EAAe,CACxB,MAAOC,EACP,MAAOC,EACP,MAAOC,EACP,MAAOC,EACP,MAAOC,EACP,MAAOA,EACP,MAAOC,IACP,MAAOF,EACP,MAAOG,EACP,MAAOC,EACP,MAAOD,EACP,MAAOC,EACP,MAAOC,EACP,MAAOA,EACP,MAAOJ,EACP,MAAOA,EACP,MAAOA,EACP,MAAOA,GAIEK,EAAmB,CAC5BC,QAASC,EACTC,OAAQD,EACRE,SAAUA,EACVC,KAAMA,EACNC,SAAUA,GAGRC,EAAmBC,IAAOC,IAAV,0bAsBhBC,EAAWF,IAAOG,KAAV,0EAKRC,EAAmBJ,IAAOG,KAAV,gJAQhBE,EAAuBL,IAAOC,IAAV,+KASpBK,EAAgBN,IAAOC,IAAV,gLASbM,EAAWP,IAAOQ,IAAV,iEAKRC,EAAYT,IAAOG,KAAV,0MAWTO,EAAuB,SAACC,GAC1B,IAAQC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACd,OACI,kBAACP,EAAD,KACI,kBAACC,EAAD,CAAUO,IAAKtB,EAAiBoB,KAChC,kBAACH,EAAD,KACKI,EACD,8BAAOD,MAkDRG,UA5CU,SAACJ,GACtB,MASIA,EAAMK,YARNJ,EADJ,EACIA,KADJ,IAEIK,IAAKC,EAFT,EAESA,QAASzB,EAFlB,EAEkBA,QAASE,EAF3B,EAE2BA,OACVwB,EAHjB,EAGItB,KAAMuB,MAHV,IAIIC,KAAQvB,EAJZ,EAIYA,SACAF,EALZ,EAKYA,SACM0B,EANlB,EAMY5B,KANZ,gBAQI6B,QARJ,MAQoBC,EARpB,EAQcH,KAAmBI,EARjC,EAQiCA,KAAkBC,EARnD,EAQuCC,YAGjCC,EAAQH,EAAKI,SAAS,KAU5B,OACI,oCACI,kBAAC9B,EAAD,KACI,8BACI,0BAAM+B,GAAG,QAAQC,KAAKC,MAAMV,EAAW,KAAvC,SADJ,KAEOI,GAEP,yBAAKZ,IAAKhC,EAAa2C,GAAOQ,IAAKT,KAEvC,kBAACtB,EAAD,KAAWU,EAAX,KAAmBM,GACnB,kBAACd,EAAD,qBACA,kBAACC,EAAD,KACI,kBAAC,EAAD,CAAsBO,KAAMgB,EAAM,SAAS,UAAWf,MApBlD,SAACqB,GACb,IAAMC,EAAU,IAAIC,KAAiB,IAAZF,GACnBG,EAAQF,EAAQG,WAChBC,EAAUJ,EAAQK,aACxB,MAAM,GAAN,OAAUH,EAAV,cAAqBE,GAgBgDE,CAAQb,EAAMjC,EAAOF,KAClF,kBAAC,EAAD,CAAsBmB,KAAK,WAAWC,MAAOjB,IAC7C,kBAAC,EAAD,CAAsBgB,KAAK,OAAOC,MAAOM,IACzC,kBAAC,EAAD,CAAsBP,KAAK,WAAWC,MAAOf","file":"static/js/3.395c511a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/temp.aa236718.svg\";","export default __webpack_public_path__ + \"static/media/humidity.38d0c2ff.svg\";","export default __webpack_public_path__ + \"static/media/wind.d35fef2c.svg\";","export default __webpack_public_path__ + \"static/media/pressure.37f0a961.svg\";","export default __webpack_public_path__ + \"static/media/sunny.bbbee777.svg\";","export default __webpack_public_path__ + \"static/media/night.cc9b9fc2.svg\";","export default __webpack_public_path__ + \"static/media/day.c5cf49fb.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-night.bdd63c6a.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.755396fe.svg\";","export default __webpack_public_path__ + \"static/media/rain.efd4d66c.svg\";","export default __webpack_public_path__ + \"static/media/rain-night.bcabe4fb.svg\";","export default __webpack_public_path__ + \"static/media/storm.7741b2c5.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport perfectDay from '../assets/perfect-day.svg';\r\nimport temp from '../assets/temp.svg';\r\nimport humidity from '../assets/humidity.svg';\r\nimport wind from '../assets/wind.svg';\r\nimport pressure from '../assets/pressure.svg';\r\nimport sunny from '../assets/sunny.svg';\r\nimport night from '../assets/night.svg';\r\nimport day from '../assets/day.svg';\r\nimport cloudyNight from '../assets/cloudy-night.svg';\r\nimport cloudy from '../assets/cloudy.svg';\r\nimport rain from '../assets/rain.svg';\r\nimport rainNight from '../assets/rain-night.svg';\r\nimport storm from '../assets/storm.svg';\r\n\r\n\r\nexport const WeatherIcons = {\r\n    \"01d\": sunny,\r\n    \"01n\": night,\r\n    \"02d\": day,\r\n    \"02n\": cloudyNight,\r\n    \"03d\": cloudy,\r\n    \"03n\": cloudy,\r\n    \"04d\": perfectDay,\r\n    \"04n\": cloudyNight,\r\n    \"09d\": rain,\r\n    \"09n\": rainNight,\r\n    \"10d\": rain,\r\n    \"10n\": rainNight,\r\n    \"11d\": storm,\r\n    \"11n\": storm,\r\n    \"13d\": cloudy,\r\n    \"13n\": cloudy,\r\n    \"50d\": cloudy,\r\n    \"50n\": cloudy\r\n}\r\n\r\n\r\nexport const WeatherInfoIcons = {\r\n    sunrise: temp,\r\n    sunset: temp,\r\n    humidity: humidity,\r\n    wind: wind,\r\n    pressure: pressure,\r\n}\r\n\r\nconst WeatherCondition = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    width: 100%;\r\n    margin: 30px auto;\r\n    & span {\r\n        margin: 20px auto;\r\n        font-size: 14px;\r\n        & span:first-of-type{\r\n            font-size: 28px;\r\n        }\r\n    }\r\n    & img {\r\n        width: 100px;\r\n        height: 100px;\r\n        margin: 5px auto;\r\n    }\r\n`;\r\n\r\nconst Location = styled.span`\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst WeatherInfoLabel = styled.span`\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    margin: 20px 25px 10px;\r\n    text-align: start;\r\n    width: 90%;\r\n`;\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    width: 90%;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    margin: 5px 10px;\r\n    width: 40%;\r\n`;\r\n\r\nconst InfoIcon = styled.img`\r\n    width: 36px;\r\n    height: 36px;\r\n`;\r\n\r\nconst Infolabel = styled.span`\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 14px;\r\n    margin: 15px;\r\n    & span {\r\n        font-size: 12px;\r\n        text-transform: capitalize;\r\n    }\r\n`;\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n    const { name, value } = props;\r\n    return (\r\n        <InfoContainer>\r\n            <InfoIcon src={WeatherInfoIcons[name]}/>\r\n            <Infolabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </Infolabel>\r\n        </InfoContainer>\r\n    );\r\n}\r\n\r\nconst WeatherComponent = (props) => {\r\n    const { \r\n        name,\r\n        sys:{country, sunrise, sunset},\r\n        wind:{speed: windSpeed},\r\n        main:{  pressure,\r\n                humidity,\r\n                temp: currTemp\r\n            },\r\n        weather:[{main: weatherType, icon, description:weatherTypeDesc}]\r\n    } = props.weatherInfo;\r\n\r\n    const isDay = icon.includes(\"d\");\r\n\r\n    const getTime = (timeStamp) => {\r\n        const newDate = new Date(timeStamp * 1000);\r\n        const hours = newDate.getHours();\r\n        const minutes = newDate.getMinutes();\r\n        return `${hours} : ${minutes}`;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <WeatherCondition>\r\n                <span>\r\n                    <span id=\"temp\">{Math.floor(currTemp - 273)}&deg;C</span>\r\n                    | {weatherTypeDesc}\r\n                </span>\r\n                <img src={WeatherIcons[icon]} alt={weatherType}/>\r\n            </WeatherCondition>\r\n            <Location>{name}, {country}</Location>\r\n            <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n            <WeatherInfoContainer>\r\n                <WeatherInfoComponent name={isDay?\"sunset\":\"sunrise\"} value={getTime(isDay?sunset:sunrise)}/>\r\n                <WeatherInfoComponent name=\"humidity\" value={humidity}/>\r\n                <WeatherInfoComponent name=\"wind\" value={windSpeed}/>\r\n                <WeatherInfoComponent name=\"pressure\" value={pressure}/>\r\n            </WeatherInfoContainer>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default WeatherComponent;"],"sourceRoot":""}