{"version":3,"sources":["modules/CityComponent.module.css","assets/perfect-day.svg","App.module.css","modules/CityComponent.js","App.js","store/Reducer.js","index.js"],"names":["module","exports","CityComponent","React","forwardRef","props","ref","className","Classes","weatherLogo","src","perfectDay","alt","chooseCityLabel","searchBox","onSubmit","onClickSearch","type","placeholder","id","WeatherComponent","lazy","ContainerBody","styled","div","animateContainer","keyframes","Container","AppLabel","span","LeftArrow","APP_KEY","initialState","searchWeatherState","reducer","state","options","App","useReducer","dispatch","inputElementRef","useRef","useSelector","city","weather","error","dispatchAction","useDispatch","useEffect","a","axios","get","response","data","fetch","onSubmitHandler","event","preventDefault","enteredCity","current","value","MemoisedSubmitHandler","useCallback","Component","style","color","fallback","weatherInfo","leftArrow","onClick","box","store","createStore","actions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0176b74d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherLogo\":\"CityComponent_weatherLogo__2_ITe\",\"chooseCityLabel\":\"CityComponent_chooseCityLabel__3Rgad\",\"searchBox\":\"CityComponent_searchBox__PMBaY\"};","export default __webpack_public_path__ + \"static/media/perfect-day.5156c281.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__1HRVK\",\"animatebox\":\"App_animatebox__2WzD8\"};","import React from 'react';\r\nimport perfectDay from '../assets/perfect-day.svg';\r\nimport Classes from './CityComponent.module.css';\r\n\r\nconst CityComponent = React.forwardRef((props,ref) => {\r\n\r\n    return (\r\n        <>\r\n            <img className={Classes.weatherLogo} src={perfectDay} alt='Perfect-Day'/>\r\n            <span className={Classes.chooseCityLabel}>Find Weather Of Your City</span>\r\n            <form className={Classes.searchBox} onSubmit={props.onClickSearch}>\r\n                <input type=\"text\" placeholder=\"City\" id=\"city\" ref={ref}/>\r\n                <button>Search</button>\r\n            </form>\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nexport default CityComponent;","import React, { useEffect, useRef, useReducer, Suspense, useCallback } from \"react\";\nimport axios from \"axios\";\nimport styled, { keyframes } from \"styled-components\";\nimport CityComponent from \"./modules/CityComponent\";\n// import WeatherComponent from \"./modules/WeatherInfoComponent\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Classes from './App.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst WeatherComponent = React.lazy(()=>import('./modules/WeatherInfoComponent'));\n\nconst ContainerBody = styled.div`\n  font-family: \"Open Sans\", sans-serif;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background: linear-gradient(#035397, #eee);\n`;\n\nconst animateContainer = keyframes`\n    0%{\n        opacity: 0;\n        transform: translateY(-100%);\n      }\n\n    80%{\n      transform: translateY(10%);\n    }\n\n    100%{\n        opacity: 1;\n        transform: translateY(0);\n      }\n`;\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: auto;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  width: 25%;\n  padding: 20px 10px;\n  border-radius: 4px;\n  font-family: \"Montserrat\";\n  animation: ${animateContainer} 500ms linear;\n      @media(max-width: 500px){\n        width: 80%;\n      }\n\n      @media(min-width:500px) and (max-width: 1000px){\n        width: 50%;\n      }\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst LeftArrow = styled.div`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  cursor: pointer;\n`;\n\nconst APP_KEY = \"2d81fef83b338fbb183f884a19152898\";\n\nconst initialState = {\n  searchWeatherState: true,\n};\n\nfunction reducer(state = initialState, options) {\n  switch (options.type) {\n    case \"SEARCH_WEATHER_TRUE\":\n      return {\n        searchWeatherState: true,\n      };\n    case \"SEARCH_WEATHER_FALSE\":\n      return {\n        searchWeatherState: false,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [{ searchWeatherState }, dispatch] = useReducer(reducer, initialState);\n\n  //create a ref to get value of input tag from city component using forward ref\n  const inputElementRef = useRef();\n\n  //Redux\n  const {city, weather, error} = useSelector(state => state);\n  const dispatchAction = useDispatch();\n\n  useEffect(() => {\n    async function fetch() {\n      if (city) {\n        try{\n          const response = await axios.get(\n            `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${APP_KEY}`\n          );\n          //Update weather state when fetched from API\n          // props.updateWeather(response.data);\n          dispatchAction({type: 'CHANGE_WEATHER', weather: response.data});\n        }\n        catch(err){\n          dispatchAction({type: 'FETCH_FAILED'});\n        }\n      }\n    }\n    fetch();\n  }, [city, dispatchAction]);\n\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n    let enteredCity = inputElementRef.current.value;\n    //update back button state to False\n    dispatch({ type: \"SEARCH_WEATHER_FALSE\" });\n    //Update CITY state when click search button\n    // props.updateCity(enteredCity);\n    dispatchAction({type: 'CHANGE_CITY', city: enteredCity});\n  };\n\n  const MemoisedSubmitHandler = useCallback(onSubmitHandler,[dispatchAction]);\n\n  const backTOSearchWeather = () => {\n    //update back button state to False\n    dispatch({ type: \"SEARCH_WEATHER_TRUE\" });\n    //reset weather details when user click back button\n    // props.updateWeather();\n    dispatchAction({type: 'CHANGE_WEATHER'});\n  };\n\n  let Component = (<CityComponent\n    ref={inputElementRef}\n    // onClickSearch={onSubmitHandler}\n    onClickSearch={MemoisedSubmitHandler}\n  />);\n\n  //Check if No Error Occured and Weather is fetached properly\n  if(!error && weather && !searchWeatherState){\n    Component = (\n      <Suspense fallback={<div>Loading...!</div>}>\n        <WeatherComponent weatherInfo={weather}/>\n      </Suspense>\n    )\n  }\n  else if(error){\n    Component = (<div style={{color: '#FF3D68'}}>Please Enter Correct City Name</div>);\n  }\n\n  //render back arrow\n  let leftArrow = null;\n\n  if((weather && !searchWeatherState) || error){\n    leftArrow = (\n      <LeftArrow onClick={backTOSearchWeather}>\n      <ArrowBackIosIcon />\n    </LeftArrow>\n    )\n  }\n\n  return (\n    <ContainerBody>\n      <div className={Classes.box}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <Container>\n        <AppLabel>React Weather App</AppLabel>\n        {leftArrow}\n        {Component}\n      </Container>\n    </ContainerBody>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    city: null,\r\n    weather: null,\r\n    error: false\r\n}\r\n\r\nexport const Reducer = (state = initialState, actions) => {\r\n    switch (actions.type) {\r\n        case 'CHANGE_CITY':\r\n            return {\r\n                city: actions.city\r\n            }\r\n        case 'CHANGE_WEATHER':\r\n            return {\r\n                weather: actions.weather\r\n            }\r\n        case 'FETCH_FAILED':\r\n            return {\r\n                error: true\r\n            }\r\n        default: return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Reducer} from './store/Reducer'\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(Reducer);\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}