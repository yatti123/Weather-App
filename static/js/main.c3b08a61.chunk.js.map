{"version":3,"sources":["modules/CityComponent.module.css","assets/perfect-day.svg","modules/Animate.module.css","modules/CityComponent.js","modules/Animate.js","App_wo_redux.js","store/Reducer.js","index.js"],"names":["module","exports","CityComponent","React","forwardRef","props","ref","className","Classes","weatherLogo","src","perfectDay","alt","chooseCityLabel","searchBox","onSubmit","onClickSearch","type","placeholder","id","Animate","box","WeatherComponent","lazy","ContainerBody","styled","div","animateContainer","keyframes","Container","AppLabel","span","LeftArrow","APP_KEY","initialState","searchWeatherState","reducer","state","options","App","useReducer","dispatch","inputElementRef","useRef","useState","city","setCity","weather","setWeather","error","setError","useEffect","a","axios","get","response","data","fetch","onSubmitHandler","event","preventDefault","enteredCity","current","value","MemoisedSubmitHandler","useCallback","Component","style","color","fallback","weatherInfo","leftArrow","onClick","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","actions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3b08a61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherLogo\":\"CityComponent_weatherLogo__2_ITe\",\"chooseCityLabel\":\"CityComponent_chooseCityLabel__3Rgad\",\"searchBox\":\"CityComponent_searchBox__PMBaY\"};","export default __webpack_public_path__ + \"static/media/perfect-day.5156c281.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Animate_box__3TXIC\",\"animatebox\":\"Animate_animatebox__261yj\"};","import React from 'react';\r\nimport perfectDay from '../assets/perfect-day.svg';\r\nimport Classes from './CityComponent.module.css';\r\n\r\nconst CityComponent = React.forwardRef((props,ref) => {\r\n\r\n    return (\r\n        <>\r\n            <img className={Classes.weatherLogo} src={perfectDay} alt='Perfect-Day'/>\r\n            <span className={Classes.chooseCityLabel}>Find Weather Of Your City</span>\r\n            <form className={Classes.searchBox} onSubmit={props.onClickSearch}>\r\n                <input type=\"text\" placeholder=\"City\" id=\"city\" ref={ref}/>\r\n                <button id='search_btn'>Search</button>\r\n            </form>\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nexport default CityComponent;","import React from 'react';\r\nimport Classes from './Animate.module.css';\r\n\r\nexport function Animate(){\r\n    return (\r\n        <div className={Classes.box}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    )\r\n}","import React, { useState, useEffect, useRef, useReducer, Suspense, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport CityComponent from \"./modules/CityComponent\";\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport {Animate} from './modules/Animate';\r\n\r\nconst WeatherComponent = React.lazy(()=>import('./modules/WeatherInfoComponent'));\r\n\r\nconst ContainerBody = styled.div`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background: linear-gradient(#035397, #eee);\r\n`;\r\n\r\nconst animateContainer = keyframes`\r\n    0%{\r\n        opacity: 0;\r\n        transform: translateY(-100%);\r\n      }\r\n\r\n    80%{\r\n      transform: translateY(10%);\r\n    }\r\n\r\n    100%{\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n      }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: auto;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n  background: white;\r\n  width: 25%;\r\n  padding: 20px 10px;\r\n  border-radius: 4px;\r\n  font-family: \"Montserrat\";\r\n  animation: ${animateContainer} 500ms linear;\r\n      @media(max-width: 500px){\r\n        width: 80%;\r\n      }\r\n\r\n      @media(min-width:500px) and (max-width: 1000px){\r\n        width: 50%;\r\n      }\r\n`;\r\n\r\nconst AppLabel = styled.span`\r\n  color: black;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst LeftArrow = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst APP_KEY = \"2d81fef83b338fbb183f884a19152898\";\r\n\r\nconst initialState = {\r\n  searchWeatherState: true,\r\n};\r\n\r\nfunction reducer(state = initialState, options) {\r\n  switch (options.type) {\r\n    case \"SEARCH_WEATHER_TRUE\":\r\n      return {\r\n        searchWeatherState: true,\r\n      };\r\n    case \"SEARCH_WEATHER_FALSE\":\r\n      return {\r\n        searchWeatherState: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const [{ searchWeatherState }, dispatch] = useReducer(reducer, initialState);\r\n\r\n  //create a ref to get value of input tag from city component using forward ref\r\n  const inputElementRef = useRef();\r\n\r\n  //Redux\r\n//   const {city, weather, error} = useSelector(state => state);\r\n//   const dispatchAction = useDispatch();\r\n\r\nconst [city, setCity] = useState();\r\nconst [weather, setWeather] = useState();\r\nconst [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      if (city) {\r\n        try{\r\n          const response = await axios.get(\r\n            `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${APP_KEY}`\r\n          );\r\n          //Update weather state when fetched from API\r\n          // props.updateWeather(response.data);\r\n        //   dispatchAction({type: 'CHANGE_WEATHER', weather: response.data});\r\n            setWeather(response.data);\r\n        }\r\n        catch(err){\r\n        //   dispatchAction({type: 'FETCH_FAILED'});\r\n            setError(true);\r\n        }\r\n      }\r\n    }\r\n    fetch();\r\n  }, [city]);\r\n\r\n  const onSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    let enteredCity = inputElementRef.current.value;\r\n    //update back button state to False\r\n    dispatch({ type: \"SEARCH_WEATHER_FALSE\" });\r\n    //Update CITY state when click search button\r\n    // props.updateCity(enteredCity);\r\n    // dispatchAction({type: 'CHANGE_CITY', city: enteredCity});\r\n        setCity(enteredCity);\r\n  };\r\n\r\n  //passing dependency array is of no use here, just passed to avoid warnings\r\n  const MemoisedSubmitHandler = useCallback(onSubmitHandler,[]);\r\n\r\n  const backTOSearchWeather = () => {\r\n    //update back button state to TRUE\r\n    dispatch({ type: \"SEARCH_WEATHER_TRUE\" });\r\n    //reset weather details when user click back button\r\n    // props.updateWeather();\r\n    // dispatchAction({type: 'CHANGE_WEATHER'});\r\n    setWeather(null);\r\n    setError(false);\r\n  };\r\n\r\n  let Component = (<CityComponent\r\n    ref={inputElementRef}\r\n    // onClickSearch={onSubmitHandler}\r\n    onClickSearch={MemoisedSubmitHandler}\r\n  />);\r\n\r\n  //Check if No Error Occured and Weather is fetached properly\r\n  if(!error && weather && !searchWeatherState){\r\n    Component = (\r\n      <Suspense fallback={<div>Loading...!</div>}>\r\n        <WeatherComponent weatherInfo={weather}/>\r\n      </Suspense>\r\n    )\r\n  }\r\n  else if(error){\r\n    Component = (<div style={{color: '#FF3D68'}}>Please Enter Correct City Name</div>);\r\n  }\r\n\r\n  //render back arrow\r\n  let leftArrow = null;\r\n\r\n  if((weather && !searchWeatherState) || error){\r\n    leftArrow = (\r\n      <LeftArrow onClick={backTOSearchWeather}>\r\n      <ArrowBackIosIcon />\r\n    </LeftArrow>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ContainerBody>\r\n      <Animate />\r\n      <Container>\r\n        <AppLabel>React Weather App</AppLabel>\r\n        {leftArrow}\r\n        {Component}\r\n      </Container>\r\n    </ContainerBody>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    city: null,\r\n    weather: null,\r\n    error: false\r\n}\r\n\r\nexport const Reducer = (state = initialState, actions) => {\r\n    switch (actions.type) {\r\n        case 'CHANGE_CITY':\r\n            return {\r\n                ...state,\r\n                city: actions.city\r\n            }\r\n        case 'CHANGE_WEATHER':\r\n            return {\r\n                ...state,\r\n                weather: actions.weather,\r\n                error: false\r\n            }\r\n        case 'FETCH_FAILED':\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default: return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App_wo_redux';\n// import App from './App_with_redux';\nimport {Reducer} from './store/Reducer'\nimport {createStore, compose} from 'redux';\nimport {Provider} from 'react-redux';\n\n// const store = createStore(Reducer);\n\n\n\n\n// Setup Redux Dev Tool, if we are having middle ware\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(Reducer, composeEnhancer());\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}